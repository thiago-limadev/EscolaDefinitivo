@model LoginModel
@{
    Layout = "_LayoutDeslogado";
    ViewData["Title"] = "Login";
}


@if (TempData["MensagemErro"] != null)
{
    <div class="alert alert-danger" role="alert">
        <button type="button" class="btn btn-danger btn-sm close-alert" arial-label="Close">X</button>
        @TempData["MensagemErro"]
    </div>

}

<div class="d-flex justify-content-center align-items-center" style="height: 100vh;">
    <div class="custom-card">
        <form asp-controller="Login" asp-action="Logar" method="post">
            <h3 class="text-center">Tela de Login</h3>
            <div class="form-group">
                <label for="exampleInputEmail1">Endereço de email</label>
                <input type="text" class="form-control" id="Login" placeholder="User-Login" asp-for="Login">
                @Html.ValidationMessageFor(x => x.Login)
            </div>
            <div class="form-group">
                <label for="senha">Senha</label>
                <input type="password" class="form-control" id="senha" placeholder="Senha" asp-for="Senha">
                @Html.ValidationMessageFor(x => x.Senha)
            </div>
            </br>
            <button type="submit" class="btn btn-primary btn-block">Entrar</button>
        </form>
    </div>
</div>