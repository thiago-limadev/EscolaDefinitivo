@using EscolaDefinitivo.Enums;
@model Usuario
@{
    ViewData["Title"] = "Adicionar Usuario";
}

<div class="text-center">
    <h1>Dados do Usuário</h1>
</div>

<form asp-controller="Usuario" asp-action="Criar" method="post">
    <div class="form-group">
        <label for="Nome">Nome do Usuario</label>
        <input type="text" asp-for="Nome" class="form-control" placeholder="Digite o nome do usuario">
        @Html.ValidationMessageFor(x => x.Nome)
    </div>
    <br/>
    <div class="form-group">
        <label for="email">E-mail do Usuario</label>
        <input type="text" asp-for="Email" class="form-control" placeholder="exemplo@exemplo.com">
        @Html.ValidationMessageFor(x => x.Email)
    </div>
    <br/>
    <div class="form-group">
        <label for="login">Login do Usuario</label>
        <input type="text" asp-for="Login" class="form-control" placeholder="Digite o Login do usuario">
        @Html.ValidationMessageFor(x => x.Login)
    </div>
    <br />
    <div class="form-group">
        <label for="perfil">Perfil do Usuario</label>
        <select asp-for="Perfil" class="form-control">
            <option value="">Selecione</option>
            <option value="@PerfilEnum.Admin">Administrador</option>
            <option value="@PerfilEnum.Padrao">Padrão</option>            
        </select>
        @Html.ValidationMessageFor(x => x.Perfil)
    </div>
        <br />
    <div class="form-group">
        <label for="senha">Senha do Usuario</label>
        <input type="password" asp-for="Senha" class="form-control" placeholder="Digite a Senha do usuario">
        @Html.ValidationMessageFor(x => x.Senha)
    </div>
    <br/>
    <a class="btn btn-secondary" asp-controller="Usuario" asp-action="Index" role="button">Voltar</a>
    <button type="submit" class="btn btn-primary">Adicionar</button>
   
</form>
